openapi: 3.0.0
info:
  version: "OpenAPI3.0-oas3"
  title: Rapid Play
  description: 'It is used to perform GET, POST, UPDATE and DELETE operations'
servers:
 - url: 'http://IP/v1/'
   description: API Server
paths:
 
  /demomodel/:
    get:
      description: Obtain all the specified items from the database
      parameters:
        - name: aggregate
          in: query
          description: For aggregating data using different operations like max, sum, push, product and pipelines like group, project, unwind, replaceRoot. For more check <a href="/aggregates.html">aggregates documentation</a>
          content:
            application/json:
              schema:
                type: array
                items:
                  anyOf:
                    - '#/components/aggregates/group'
        - in: query
          name: filter
          description: For filtering the data
          content:
            application/json:
              schema:
                type: object
                properties:
                  where:
                    type: object
                    properties:
                      keyName:
                        type: string
                example:
                  where:
                      keyName: "value"
      responses:
        200:
          description: Successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DemoModel'
        400:
          description: Bad request
        500:
          description: Internal Server Error
    post:
      description: Creates a new DemoModel entry in the database
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DemoModel'
      responses:
        200:
          description: Successful
        400:
          description: Bad request Error
        500:
          description: Internal Server Error
  /demomodel/78a71857-2554-498a-8475-03e98532b7c2:
    get:
      description: Obtain specified item by their id
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        200:
          description: Successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DemoModel'
        400:
          description: Bad request
        500:
          description: Internal Server Error
    patch:
      description: update the specified item using the id
      parameters:
        - name: id
          in: path
          required: true
          schema:
            example: asd-3erd-tre
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DemoModel'
      responses:
        200:
          description: OK
        400:
          description: Bad Request
        500:
          description: Internal Server Error
    delete:
      description: Delete the specified item using the id
      parameters:
        - name: id
          in: path
          required: true
          schema:
            example: asd-3erd-tre
      responses:
        200:
          description: Successful
        400:
          description: Bad request
        500:
          description: Internal Server Error

  /user/:
    get:
      description: Obtain all the specified items from the database
      parameters:
        - name: aggregate
          in: query
          description: For aggregating data using different operations like max, sum, push, product and pipelines like group, project, unwind, replaceRoot. For more check <a href="/aggregates.html">aggregates documentation</a>
          content:
            application/json:
              schema:
                type: array
                items:
                  anyOf:
                    - '#/components/aggregates/group'
        - in: query
          name: filter
          description: For filtering the data
          content:
            application/json:
              schema:
                type: object
                properties:
                  where:
                    type: object
                    properties:
                      keyName:
                        type: string
                example:
                  where:
                      keyName: "value"
      responses:
        200:
          description: Successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        400:
          description: Bad request
        500:
          description: Internal Server Error
    post:
      description: Creates a new User entry in the database
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
      responses:
        200:
          description: Successful
        400:
          description: Bad request Error
        500:
          description: Internal Server Error
  /user/16580325-e713-4e6a-aaed-2312eb3f2786:
    get:
      description: Obtain specified item by their id
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        200:
          description: Successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        400:
          description: Bad request
        500:
          description: Internal Server Error
    patch:
      description: update the specified item using the id
      parameters:
        - name: id
          in: path
          required: true
          schema:
            example: asd-3erd-tre
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
      responses:
        200:
          description: OK
        400:
          description: Bad Request
        500:
          description: Internal Server Error
    delete:
      description: Delete the specified item using the id
      parameters:
        - name: id
          in: path
          required: true
          schema:
            example: asd-3erd-tre
      responses:
        200:
          description: Successful
        400:
          description: Bad request
        500:
          description: Internal Server Error


components:
  aggregates:
    group:
      type: object
      description: Let grouping of data with fields provided in _id field
      properties:
        $group:
          _id:
            type:
              anyOf:
                - object
                - string
                - null
            sum:
              type: object
              properties:
                $sum:
                  type: string

  schemas:
    DemoModel:
      description: DemoModel powered by MongoDb
      type: object
      properties:
        location:
          type: "String"
    User:
      description: User powered by MongoDb
      type: object
      properties:
        location:
          type: ""
       